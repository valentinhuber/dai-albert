Terminals unused in grammar

   TRUE
   FALSE
   FLOAT
   BOOL
   STRING
   UMINUS


State 14 conflicts: 7 shift/reduce


Grammar

    0 $accept: program $end

    1 program: init function

    2 init: /* empty */

    3 function: MAIN scope
    4         | /* empty */

    5 scope: '{' stmts '}'

    6 stmts: /* empty */
    7      | stmts stmt

    8 stmt: ';'
    9     | declaration ';'
   10     | PRINT expr ';'
   11     | VARIABLE '=' expr ';'
   12     | WHILE '(' expr ')' stmt
   13     | IF '(' expr ')' stmt
   14     | IF '(' expr ')' stmt ELSE stmt
   15     | '{' stmt_list '}'

   16 @1: /* empty */

   17 declaration: INT @1 expr ';'

   18 stmt_list: /* empty */
   19          | stmt
   20          | stmt_list stmt

   21 expr: INTEGER
   22     | VARIABLE
   23     | expr '+' expr
   24     | expr '-' expr
   25     | expr '*' expr
   26     | expr '/' expr
   27     | expr '<' expr
   28     | expr '>' expr
   29     | expr GE expr
   30     | expr LE expr
   31     | expr NE expr
   32     | expr EQ expr
   33     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 13 14 33
')' (41) 12 13 14 33
'*' (42) 25
'+' (43) 23
'-' (45) 24
'/' (47) 26
';' (59) 8 9 10 11 17
'<' (60) 27
'=' (61) 11
'>' (62) 28
'{' (123) 5 15
'}' (125) 5 15
error (256)
MAIN (258) 3
INTEGER (259) 21
VARIABLE (260) 11 22
WHILE (261) 12
IF (262) 13 14
PRINT (263) 10
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267) 14
INT (268) 17
FLOAT (269)
BOOL (270)
STRING (271)
NE (272) 31
EQ (273) 32
LE (274) 30
GE (275) 29
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
init (36)
    on left: 2, on right: 1
function (37)
    on left: 3 4, on right: 1
scope (38)
    on left: 5, on right: 3
stmts (39)
    on left: 6 7, on right: 5 7
stmt (40)
    on left: 8 9 10 11 12 13 14 15, on right: 7 12 13 14 19 20
declaration (41)
    on left: 17, on right: 9
@1 (42)
    on left: 16, on right: 17
stmt_list (43)
    on left: 18 19 20, on right: 15 20
expr (44)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33, on right: 10 11
    12 13 14 17 23 24 25 26 27 28 29 30 31 32 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (init)

    program  go to state 1
    init     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: init . function

    MAIN  shift, and go to state 4

    $default  reduce using rule 4 (function)

    function  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 function: MAIN . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    1 program: init function .

    $default  reduce using rule 1 (program)


State 6

    5 scope: '{' . stmts '}'

    $default  reduce using rule 6 (stmts)

    stmts  go to state 8


State 7

    3 function: MAIN scope .

    $default  reduce using rule 3 (function)


State 8

    5 scope: '{' stmts . '}'
    7 stmts: stmts . stmt

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    '}'       shift, and go to state 15
    ';'       shift, and go to state 16

    stmt         go to state 17
    declaration  go to state 18


State 9

   11 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 19


State 10

   12 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 20


State 11

   13 stmt: IF . '(' expr ')' stmt
   14     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 21


State 12

   10 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 25


State 13

   17 declaration: INT . @1 expr ';'

    $default  reduce using rule 16 (@1)

    @1  go to state 26


State 14

   15 stmt: '{' . stmt_list '}'

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    ';'       shift, and go to state 16

    VARIABLE  [reduce using rule 18 (stmt_list)]
    WHILE     [reduce using rule 18 (stmt_list)]
    IF        [reduce using rule 18 (stmt_list)]
    PRINT     [reduce using rule 18 (stmt_list)]
    INT       [reduce using rule 18 (stmt_list)]
    '{'       [reduce using rule 18 (stmt_list)]
    ';'       [reduce using rule 18 (stmt_list)]
    $default  reduce using rule 18 (stmt_list)

    stmt         go to state 27
    declaration  go to state 18
    stmt_list    go to state 28


State 15

    5 scope: '{' stmts '}' .

    $default  reduce using rule 5 (scope)


State 16

    8 stmt: ';' .

    $default  reduce using rule 8 (stmt)


State 17

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 18

    9 stmt: declaration . ';'

    ';'  shift, and go to state 29


State 19

   11 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 30


State 20

   12 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 31


State 21

   13 stmt: IF '(' . expr ')' stmt
   14     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 32


State 22

   21 expr: INTEGER .

    $default  reduce using rule 21 (expr)


State 23

   22 expr: VARIABLE .

    $default  reduce using rule 22 (expr)


State 24

   33 expr: '(' . expr ')'

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 33


State 25

   10 stmt: PRINT expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 44


State 26

   17 declaration: INT @1 . expr ';'

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 45


State 27

   19 stmt_list: stmt .

    $default  reduce using rule 19 (stmt_list)


State 28

   15 stmt: '{' stmt_list . '}'
   20 stmt_list: stmt_list . stmt

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    '}'       shift, and go to state 46
    ';'       shift, and go to state 16

    stmt         go to state 47
    declaration  go to state 18


State 29

    9 stmt: declaration ';' .

    $default  reduce using rule 9 (stmt)


State 30

   11 stmt: VARIABLE '=' expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 48


State 31

   12 stmt: WHILE '(' expr . ')' stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 49


State 32

   13 stmt: IF '(' expr . ')' stmt
   14     | IF '(' expr . ')' stmt ELSE stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 50


State 33

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr
   33     | '(' expr . ')'

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 51


State 34

   28 expr: expr '>' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 52


State 35

   27 expr: expr '<' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 53


State 36

   31 expr: expr NE . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 54


State 37

   32 expr: expr EQ . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 55


State 38

   30 expr: expr LE . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 56


State 39

   29 expr: expr GE . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 57


State 40

   23 expr: expr '+' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 58


State 41

   24 expr: expr '-' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 59


State 42

   25 expr: expr '*' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 60


State 43

   26 expr: expr '/' . expr

    INTEGER   shift, and go to state 22
    VARIABLE  shift, and go to state 23
    '('       shift, and go to state 24

    expr  go to state 61


State 44

   10 stmt: PRINT expr ';' .

    $default  reduce using rule 10 (stmt)


State 45

   17 declaration: INT @1 expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 34
    '<'  shift, and go to state 35
    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    LE   shift, and go to state 38
    GE   shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 62


State 46

   15 stmt: '{' stmt_list '}' .

    $default  reduce using rule 15 (stmt)


State 47

   20 stmt_list: stmt_list stmt .

    $default  reduce using rule 20 (stmt_list)


State 48

   11 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 11 (stmt)


State 49

   12 stmt: WHILE '(' expr ')' . stmt

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    ';'       shift, and go to state 16

    stmt         go to state 63
    declaration  go to state 18


State 50

   13 stmt: IF '(' expr ')' . stmt
   14     | IF '(' expr ')' . stmt ELSE stmt

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    ';'       shift, and go to state 16

    stmt         go to state 64
    declaration  go to state 18


State 51

   33 expr: '(' expr ')' .

    $default  reduce using rule 33 (expr)


State 52

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   28     | expr '>' expr .
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 28 (expr)


State 53

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   27     | expr '<' expr .
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 27 (expr)


State 54

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   31     | expr NE expr .
   32     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 31 (expr)


State 55

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 32 (expr)


State 56

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   30     | expr LE expr .
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 30 (expr)


State 57

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   29     | expr GE expr .
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 29 (expr)


State 58

   23 expr: expr . '+' expr
   23     | expr '+' expr .
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 23 (expr)


State 59

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 24 (expr)


State 60

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   25     | expr '*' expr .
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    $default  reduce using rule 25 (expr)


State 61

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   26     | expr '/' expr .
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


State 62

   17 declaration: INT @1 expr ';' .

    $default  reduce using rule 17 (declaration)


State 63

   12 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 12 (stmt)


State 64

   13 stmt: IF '(' expr ')' stmt .
   14     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 65

    $default  reduce using rule 13 (stmt)


State 65

   14 stmt: IF '(' expr ')' stmt ELSE . stmt

    VARIABLE  shift, and go to state 9
    WHILE     shift, and go to state 10
    IF        shift, and go to state 11
    PRINT     shift, and go to state 12
    INT       shift, and go to state 13
    '{'       shift, and go to state 14
    ';'       shift, and go to state 16

    stmt         go to state 66
    declaration  go to state 18


State 66

   14 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 14 (stmt)
