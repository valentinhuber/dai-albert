Terminals unused in grammar

   TRUE
   FALSE
   FLOAT
   BOOL
   UMINUS


Grammar

    0 $accept: program $end

    1 program: init function

    2 init: /* empty */

    3 function: MAIN scope

    4 scope: '{' stmts '}'

    5 stmts: stmt
    6      | stmts stmt

    7 stmt: PRINT expr ';'
    8     | VARIABLE '=' expr ';'
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | '{' stmts '}'
   13     | declaration ';'

   14 @1: /* empty */

   15 declaration: INT @1 assignment

   16 @2: /* empty */

   17 declaration: STRING @2 assignment

   18 assignment: VARIABLE
   19           | VARIABLE '=' expr

   20 expr: INTEGER
   21     | STRING_LITERAL
   22     | VARIABLE
   23     | expr '+' expr
   24     | expr '-' expr
   25     | expr '*' expr
   26     | expr '/' expr
   27     | expr '<' expr
   28     | expr '>' expr
   29     | expr GE expr
   30     | expr LE expr
   31     | expr NE expr
   32     | expr EQ expr
   33     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 33
')' (41) 9 10 11 33
'*' (42) 25
'+' (43) 23
'-' (45) 24
'/' (47) 26
';' (59) 7 8 13
'<' (60) 27
'=' (61) 8 19
'>' (62) 28
'{' (123) 4 12
'}' (125) 4 12
error (256)
MAIN (258) 3
INTEGER (259) 20
STRING_LITERAL (260) 21
VARIABLE (261) 8 18 19 22
WHILE (262) 9
IF (263) 10 11
PRINT (264) 7
TRUE (265)
FALSE (266)
IFX (267)
ELSE (268) 11
INT (269) 15
FLOAT (270)
BOOL (271)
STRING (272) 17
NE (273) 31
EQ (274) 32
LE (275) 30
GE (276) 29
UMINUS (277)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
init (37)
    on left: 2, on right: 1
function (38)
    on left: 3, on right: 1
scope (39)
    on left: 4, on right: 3
stmts (40)
    on left: 5 6, on right: 4 6 12
stmt (41)
    on left: 7 8 9 10 11 12 13, on right: 5 6 9 10 11
declaration (42)
    on left: 15 17, on right: 13
@1 (43)
    on left: 14, on right: 15
@2 (44)
    on left: 16, on right: 17
assignment (45)
    on left: 18 19, on right: 15 17
expr (46)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33, on right: 7
    8 9 10 11 19 23 24 25 26 27 28 29 30 31 32 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (init)

    program  go to state 1
    init     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: init . function

    MAIN  shift, and go to state 4

    function  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 function: MAIN . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    1 program: init function .

    $default  reduce using rule 1 (program)


State 6

    4 scope: '{' . stmts '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14

    stmts        go to state 15
    stmt         go to state 16
    declaration  go to state 17


State 7

    3 function: MAIN scope .

    $default  reduce using rule 3 (function)


State 8

    8 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 18


State 9

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 19


State 10

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 20


State 11

    7 stmt: PRINT . expr ';'

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 25


State 12

   15 declaration: INT . @1 assignment

    $default  reduce using rule 14 (@1)

    @1  go to state 26


State 13

   17 declaration: STRING . @2 assignment

    $default  reduce using rule 16 (@2)

    @2  go to state 27


State 14

   12 stmt: '{' . stmts '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14

    stmts        go to state 28
    stmt         go to state 16
    declaration  go to state 17


State 15

    4 scope: '{' stmts . '}'
    6 stmts: stmts . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14
    '}'       shift, and go to state 29

    stmt         go to state 30
    declaration  go to state 17


State 16

    5 stmts: stmt .

    $default  reduce using rule 5 (stmts)


State 17

   13 stmt: declaration . ';'

    ';'  shift, and go to state 31


State 18

    8 stmt: VARIABLE '=' . expr ';'

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 32


State 19

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 33


State 20

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 34


State 21

   20 expr: INTEGER .

    $default  reduce using rule 20 (expr)


State 22

   21 expr: STRING_LITERAL .

    $default  reduce using rule 21 (expr)


State 23

   22 expr: VARIABLE .

    $default  reduce using rule 22 (expr)


State 24

   33 expr: '(' . expr ')'

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 35


State 25

    7 stmt: PRINT expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 46


State 26

   15 declaration: INT @1 . assignment

    VARIABLE  shift, and go to state 47

    assignment  go to state 48


State 27

   17 declaration: STRING @2 . assignment

    VARIABLE  shift, and go to state 47

    assignment  go to state 49


State 28

    6 stmts: stmts . stmt
   12 stmt: '{' stmts . '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14
    '}'       shift, and go to state 50

    stmt         go to state 30
    declaration  go to state 17


State 29

    4 scope: '{' stmts '}' .

    $default  reduce using rule 4 (scope)


State 30

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


State 31

   13 stmt: declaration ';' .

    $default  reduce using rule 13 (stmt)


State 32

    8 stmt: VARIABLE '=' expr . ';'
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ';'  shift, and go to state 51


State 33

    9 stmt: WHILE '(' expr . ')' stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 52


State 34

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 53


State 35

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr
   33     | '(' expr . ')'

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    ')'  shift, and go to state 54


State 36

   28 expr: expr '>' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 55


State 37

   27 expr: expr '<' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 56


State 38

   31 expr: expr NE . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 57


State 39

   32 expr: expr EQ . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 58


State 40

   30 expr: expr LE . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 59


State 41

   29 expr: expr GE . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 60


State 42

   23 expr: expr '+' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 61


State 43

   24 expr: expr '-' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 62


State 44

   25 expr: expr '*' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 63


State 45

   26 expr: expr '/' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 64


State 46

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


State 47

   18 assignment: VARIABLE .
   19           | VARIABLE . '=' expr

    '='  shift, and go to state 65

    $default  reduce using rule 18 (assignment)


State 48

   15 declaration: INT @1 assignment .

    $default  reduce using rule 15 (declaration)


State 49

   17 declaration: STRING @2 assignment .

    $default  reduce using rule 17 (declaration)


State 50

   12 stmt: '{' stmts '}' .

    $default  reduce using rule 12 (stmt)


State 51

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


State 52

    9 stmt: WHILE '(' expr ')' . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14

    stmt         go to state 66
    declaration  go to state 17


State 53

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14

    stmt         go to state 67
    declaration  go to state 17


State 54

   33 expr: '(' expr ')' .

    $default  reduce using rule 33 (expr)


State 55

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   28     | expr '>' expr .
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 28 (expr)


State 56

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   27     | expr '<' expr .
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 27 (expr)


State 57

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   31     | expr NE expr .
   32     | expr . EQ expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 31 (expr)


State 58

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr
   32     | expr EQ expr .

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 32 (expr)


State 59

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   30     | expr LE expr .
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 30 (expr)


State 60

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   29     | expr GE expr .
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 29 (expr)


State 61

   23 expr: expr . '+' expr
   23     | expr '+' expr .
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 23 (expr)


State 62

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   24     | expr '-' expr .
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 24 (expr)


State 63

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   25     | expr '*' expr .
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    $default  reduce using rule 25 (expr)


State 64

   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   26     | expr '/' expr .
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    $default  reduce using rule 26 (expr)


State 65

   19 assignment: VARIABLE '=' . expr

    INTEGER         shift, and go to state 21
    STRING_LITERAL  shift, and go to state 22
    VARIABLE        shift, and go to state 23
    '('             shift, and go to state 24

    expr  go to state 68


State 66

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


State 67

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 69

    $default  reduce using rule 10 (stmt)


State 68

   19 assignment: VARIABLE '=' expr .
   23 expr: expr . '+' expr
   24     | expr . '-' expr
   25     | expr . '*' expr
   26     | expr . '/' expr
   27     | expr . '<' expr
   28     | expr . '>' expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . NE expr
   32     | expr . EQ expr

    '>'  shift, and go to state 36
    '<'  shift, and go to state 37
    NE   shift, and go to state 38
    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 19 (assignment)


State 69

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    INT       shift, and go to state 12
    STRING    shift, and go to state 13
    '{'       shift, and go to state 14

    stmt         go to state 70
    declaration  go to state 17


State 70

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
