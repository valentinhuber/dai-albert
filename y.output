Terminals unused in grammar

   TRUE
   FALSE
   FLOAT
   BOOL
   STRING
   UMINUS


Grammar

    0 $accept: program $end

    1 program: init function

    2 init: /* empty */

    3 function: MAIN scope

    4 scope: '{' stmts '}'

    5 stmts: stmt
    6      | stmts stmt

    7 stmt: PRINT expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmts '}'
   12     | declaration ';'

   13 declaration: INT assignment ';'

   14 assignment: VARIABLE
   15           | VARIABLE '=' expr

   16 expr: INTEGER
   17     | expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '/' expr
   21     | expr '<' expr
   22     | expr '>' expr
   23     | expr GE expr
   24     | expr LE expr
   25     | expr NE expr
   26     | expr EQ expr
   27     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 27
')' (41) 8 9 10 27
'*' (42) 19
'+' (43) 17
'-' (45) 18
'/' (47) 20
';' (59) 7 12 13
'<' (60) 21
'=' (61) 15
'>' (62) 22
'{' (123) 4 11
'}' (125) 4 11
error (256)
MAIN (258) 3
INTEGER (259) 16
VARIABLE (260) 14 15
WHILE (261) 8
IF (262) 9 10
PRINT (263) 7
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267) 10
INT (268) 13
FLOAT (269)
BOOL (270)
STRING (271)
NE (272) 25
EQ (273) 26
LE (274) 24
GE (275) 23
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
init (36)
    on left: 2, on right: 1
function (37)
    on left: 3, on right: 1
scope (38)
    on left: 4, on right: 3
stmts (39)
    on left: 5 6, on right: 4 6 11
stmt (40)
    on left: 7 8 9 10 11 12, on right: 5 6 8 9 10
declaration (41)
    on left: 13, on right: 12
assignment (42)
    on left: 14 15, on right: 13
expr (43)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27, on right: 7 8 9 10
    15 17 18 19 20 21 22 23 24 25 26 27


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (init)

    program  go to state 1
    init     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: init . function

    MAIN  shift, and go to state 4

    function  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 function: MAIN . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    1 program: init function .

    $default  reduce using rule 1 (program)


State 6

    4 scope: '{' . stmts '}'

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12

    stmts        go to state 13
    stmt         go to state 14
    declaration  go to state 15


State 7

    3 function: MAIN scope .

    $default  reduce using rule 3 (function)


State 8

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 16


State 9

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 17


State 10

    7 stmt: PRINT . expr ';'

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 20


State 11

   13 declaration: INT . assignment ';'

    VARIABLE  shift, and go to state 21

    assignment  go to state 22


State 12

   11 stmt: '{' . stmts '}'

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12

    stmts        go to state 23
    stmt         go to state 14
    declaration  go to state 15


State 13

    4 scope: '{' stmts . '}'
    6 stmts: stmts . stmt

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12
    '}'    shift, and go to state 24

    stmt         go to state 25
    declaration  go to state 15


State 14

    5 stmts: stmt .

    $default  reduce using rule 5 (stmts)


State 15

   12 stmt: declaration . ';'

    ';'  shift, and go to state 26


State 16

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 27


State 17

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 28


State 18

   16 expr: INTEGER .

    $default  reduce using rule 16 (expr)


State 19

   27 expr: '(' . expr ')'

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 29


State 20

    7 stmt: PRINT expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ';'  shift, and go to state 40


State 21

   14 assignment: VARIABLE .
   15           | VARIABLE . '=' expr

    '='  shift, and go to state 41

    $default  reduce using rule 14 (assignment)


State 22

   13 declaration: INT assignment . ';'

    ';'  shift, and go to state 42


State 23

    6 stmts: stmts . stmt
   11 stmt: '{' stmts . '}'

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12
    '}'    shift, and go to state 43

    stmt         go to state 25
    declaration  go to state 15


State 24

    4 scope: '{' stmts '}' .

    $default  reduce using rule 4 (scope)


State 25

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


State 26

   12 stmt: declaration ';' .

    $default  reduce using rule 12 (stmt)


State 27

    8 stmt: WHILE '(' expr . ')' stmt
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 44


State 28

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 45


State 29

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr
   27     | '(' expr . ')'

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 46


State 30

   22 expr: expr '>' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 47


State 31

   21 expr: expr '<' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 48


State 32

   25 expr: expr NE . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 49


State 33

   26 expr: expr EQ . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 50


State 34

   24 expr: expr LE . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 51


State 35

   23 expr: expr GE . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 52


State 36

   17 expr: expr '+' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 53


State 37

   18 expr: expr '-' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 54


State 38

   19 expr: expr '*' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 55


State 39

   20 expr: expr '/' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 56


State 40

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


State 41

   15 assignment: VARIABLE '=' . expr

    INTEGER  shift, and go to state 18
    '('      shift, and go to state 19

    expr  go to state 57


State 42

   13 declaration: INT assignment ';' .

    $default  reduce using rule 13 (declaration)


State 43

   11 stmt: '{' stmts '}' .

    $default  reduce using rule 11 (stmt)


State 44

    8 stmt: WHILE '(' expr ')' . stmt

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12

    stmt         go to state 58
    declaration  go to state 15


State 45

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12

    stmt         go to state 59
    declaration  go to state 15


State 46

   27 expr: '(' expr ')' .

    $default  reduce using rule 27 (expr)


State 47

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   22     | expr '>' expr .
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 22 (expr)


State 48

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   21     | expr '<' expr .
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 21 (expr)


State 49

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   25     | expr NE expr .
   26     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 25 (expr)


State 50

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr
   26     | expr EQ expr .

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 26 (expr)


State 51

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   24     | expr LE expr .
   25     | expr . NE expr
   26     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 24 (expr)


State 52

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   23     | expr GE expr .
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 23 (expr)


State 53

   17 expr: expr . '+' expr
   17     | expr '+' expr .
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 17 (expr)


State 54

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   18     | expr '-' expr .
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 18 (expr)


State 55

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   19     | expr '*' expr .
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    $default  reduce using rule 19 (expr)


State 56

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   20     | expr '/' expr .
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    $default  reduce using rule 20 (expr)


State 57

   15 assignment: VARIABLE '=' expr .
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   21     | expr . '<' expr
   22     | expr . '>' expr
   23     | expr . GE expr
   24     | expr . LE expr
   25     | expr . NE expr
   26     | expr . EQ expr

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 15 (assignment)


State 58

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 59

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 60

    $default  reduce using rule 9 (stmt)


State 60

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    WHILE  shift, and go to state 8
    IF     shift, and go to state 9
    PRINT  shift, and go to state 10
    INT    shift, and go to state 11
    '{'    shift, and go to state 12

    stmt         go to state 61
    declaration  go to state 15


State 61

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
