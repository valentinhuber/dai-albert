Terminals unused in grammar

   '>'
   '<'
   NE
   EQ
   LE
   GE
   UMINUS


Grammar

    0 $accept: function $end

    1 function: MAIN scope

    2 scope: '{' stmts '}'

    3 stmts: /* empty */
    4      | stmts stmt

    5 stmt: ';'
    6     | expr ';'
    7     | PRINT expr ';'
    8     | VARIABLE '=' expr ';'
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | scope

   13 expr: INTEGER
   14     | VARIABLE
   15     | expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11
')' (41) 9 10 11
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
';' (59) 5 6 7 8
'<' (60)
'=' (61) 8
'>' (62)
'{' (123) 2
'}' (125) 2
error (256)
MAIN (258) 1
INTEGER (259) 13
VARIABLE (260) 8 14
WHILE (261) 9
IF (262) 10 11
PRINT (263) 7
IFX (264)
ELSE (265) 11
NE (266)
EQ (267)
LE (268)
GE (269)
UMINUS (270)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
function (29)
    on left: 1, on right: 0
scope (30)
    on left: 2, on right: 1 12
stmts (31)
    on left: 3 4, on right: 2 4
stmt (32)
    on left: 5 6 7 8 9 10 11 12, on right: 4 9 10 11
expr (33)
    on left: 13 14 15 16 17 18, on right: 6 7 8 9 10 11 15 16 17 18


State 0

    0 $accept: . function $end

    MAIN  shift, and go to state 1

    function  go to state 2


State 1

    1 function: MAIN . scope

    '{'  shift, and go to state 3

    scope  go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    2 scope: '{' . stmts '}'

    $default  reduce using rule 3 (stmts)

    stmts  go to state 6


State 4

    1 function: MAIN scope .

    $default  reduce using rule 1 (function)


State 5

    0 $accept: function $end .

    $default  accept


State 6

    2 scope: '{' stmts . '}'
    4 stmts: stmts . stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 3
    '}'       shift, and go to state 12
    ';'       shift, and go to state 13

    scope  go to state 14
    stmt   go to state 15
    expr   go to state 16


State 7

   13 expr: INTEGER .

    $default  reduce using rule 13 (expr)


State 8

    8 stmt: VARIABLE . '=' expr ';'
   14 expr: VARIABLE .

    '='  shift, and go to state 17

    $default  reduce using rule 14 (expr)


State 9

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 18


State 10

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 19


State 11

    7 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 21


State 12

    2 scope: '{' stmts '}' .

    $default  reduce using rule 2 (scope)


State 13

    5 stmt: ';' .

    $default  reduce using rule 5 (stmt)


State 14

   12 stmt: scope .

    $default  reduce using rule 12 (stmt)


State 15

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


State 16

    6 stmt: expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ';'  shift, and go to state 26


State 17

    8 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 27


State 18

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 28


State 19

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 29


State 20

   14 expr: VARIABLE .

    $default  reduce using rule 14 (expr)


State 21

    7 stmt: PRINT expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ';'  shift, and go to state 30


State 22

   15 expr: expr '+' . expr

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 31


State 23

   16 expr: expr '-' . expr

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 32


State 24

   17 expr: expr '*' . expr

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 33


State 25

   18 expr: expr '/' . expr

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 20

    expr  go to state 34


State 26

    6 stmt: expr ';' .

    $default  reduce using rule 6 (stmt)


State 27

    8 stmt: VARIABLE '=' expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ';'  shift, and go to state 35


State 28

    9 stmt: WHILE '(' expr . ')' stmt
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ')'  shift, and go to state 36


State 29

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ')'  shift, and go to state 37


State 30

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


State 31

   15 expr: expr . '+' expr
   15     | expr '+' expr .
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr

    '*'  shift, and go to state 24
    '/'  shift, and go to state 25

    $default  reduce using rule 15 (expr)


State 32

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr

    '*'  shift, and go to state 24
    '/'  shift, and go to state 25

    $default  reduce using rule 16 (expr)


State 33

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr

    $default  reduce using rule 17 (expr)


State 34

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .

    $default  reduce using rule 18 (expr)


State 35

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


State 36

    9 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope  go to state 14
    stmt   go to state 38
    expr   go to state 16


State 37

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope  go to state 14
    stmt   go to state 39
    expr   go to state 16


State 38

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


State 39

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 40

    $default  reduce using rule 10 (stmt)


State 40

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 7
    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope  go to state 14
    stmt   go to state 41
    expr   go to state 16


State 41

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
