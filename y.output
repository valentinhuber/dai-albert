Terminals unused in grammar

   WHILE
   IF
   TRUE
   FALSE
   IFX
   ELSE
   FLOAT
   BOOL
   STRING
   '>'
   '<'
   NE
   EQ
   LE
   GE
   UMINUS


Grammar

    0 $accept: program $end

    1 program: function

    2 function: MAIN function scope
    3         | /* empty */

    4 scope: '{' stmts '}'

    5 stmts: /* empty */
    6      | stmts stmt

    7 stmt: ';'
    8     | declaration ';'
    9     | PRINT expr ';'
   10     | VARIABLE '=' expr ';'
   11     | scope

   12 @1: /* empty */

   13 declaration: INT @1 expr ';'

   14 expr: INTEGER
   15     | VARIABLE
   16     | expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'*' (42) 18
'+' (43) 16
'-' (45) 17
'/' (47) 19
';' (59) 7 8 9 10 13
'<' (60)
'=' (61) 10
'>' (62)
'{' (123) 4
'}' (125) 4
error (256)
MAIN (258) 2
INTEGER (259) 14
VARIABLE (260) 10 15
WHILE (261)
IF (262)
PRINT (263) 9
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267)
INT (268) 13
FLOAT (269)
BOOL (270)
STRING (271)
NE (272)
EQ (273)
LE (274)
GE (275)
UMINUS (276)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
function (34)
    on left: 2 3, on right: 1 2
scope (35)
    on left: 4, on right: 2 11
stmts (36)
    on left: 5 6, on right: 4 6
stmt (37)
    on left: 7 8 9 10 11, on right: 6
declaration (38)
    on left: 13, on right: 8
@1 (39)
    on left: 12, on right: 13
expr (40)
    on left: 14 15 16 17 18 19, on right: 9 10 13 16 17 18 19


State 0

    0 $accept: . program $end

    MAIN  shift, and go to state 1

    $default  reduce using rule 3 (function)

    program   go to state 2
    function  go to state 3


State 1

    2 function: MAIN . function scope

    MAIN  shift, and go to state 1

    $default  reduce using rule 3 (function)

    function  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: function .

    $default  reduce using rule 1 (program)


State 4

    2 function: MAIN function . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    4 scope: '{' . stmts '}'

    $default  reduce using rule 5 (stmts)

    stmts  go to state 8


State 7

    2 function: MAIN function scope .

    $default  reduce using rule 2 (function)


State 8

    4 scope: '{' stmts . '}'
    6 stmts: stmts . stmt

    VARIABLE  shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 6
    '}'       shift, and go to state 12
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 15
    declaration  go to state 16


State 9

   10 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 17


State 10

    9 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 20


State 11

   13 declaration: INT . @1 expr ';'

    $default  reduce using rule 12 (@1)

    @1  go to state 21


State 12

    4 scope: '{' stmts '}' .

    $default  reduce using rule 4 (scope)


State 13

    7 stmt: ';' .

    $default  reduce using rule 7 (stmt)


State 14

   11 stmt: scope .

    $default  reduce using rule 11 (stmt)


State 15

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


State 16

    8 stmt: declaration . ';'

    ';'  shift, and go to state 22


State 17

   10 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 23


State 18

   14 expr: INTEGER .

    $default  reduce using rule 14 (expr)


State 19

   15 expr: VARIABLE .

    $default  reduce using rule 15 (expr)


State 20

    9 stmt: PRINT expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 28


State 21

   13 declaration: INT @1 . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 29


State 22

    8 stmt: declaration ';' .

    $default  reduce using rule 8 (stmt)


State 23

   10 stmt: VARIABLE '=' expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 30


State 24

   16 expr: expr '+' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 31


State 25

   17 expr: expr '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 32


State 26

   18 expr: expr '*' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 33


State 27

   19 expr: expr '/' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 34


State 28

    9 stmt: PRINT expr ';' .

    $default  reduce using rule 9 (stmt)


State 29

   13 declaration: INT @1 expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 35


State 30

   10 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 31

   16 expr: expr . '+' expr
   16     | expr '+' expr .
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 16 (expr)


State 32

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 17 (expr)


State 33

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .
   19     | expr . '/' expr

    $default  reduce using rule 18 (expr)


State 34

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .

    $default  reduce using rule 19 (expr)


State 35

   13 declaration: INT @1 expr ';' .

    $default  reduce using rule 13 (declaration)
