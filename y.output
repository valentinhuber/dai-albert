Terminals unused in grammar

   WHILE
   IF
   TRUE
   FALSE
   IFX
   ELSE
   FLOAT
   BOOL
   STRING
   '>'
   '<'
   NE
   EQ
   LE
   GE
   UMINUS


Grammar

    0 $accept: program $end

    1 program: init function

    2 init: /* empty */

    3 function: MAIN scope
    4         | /* empty */

    5 scope: '{' stmts '}'

    6 stmts: /* empty */
    7      | stmts stmt

    8 stmt: ';'
    9     | declaration ';'
   10     | PRINT expr ';'
   11     | VARIABLE '=' expr ';'
   12     | scope

   13 @1: /* empty */

   14 declaration: INT @1 expr ';'

   15 expr: INTEGER
   16     | VARIABLE
   17     | expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'*' (42) 19
'+' (43) 17
'-' (45) 18
'/' (47) 20
';' (59) 8 9 10 11 14
'<' (60)
'=' (61) 11
'>' (62)
'{' (123) 5
'}' (125) 5
error (256)
MAIN (258) 3
INTEGER (259) 15
VARIABLE (260) 11 16
WHILE (261)
IF (262)
PRINT (263) 10
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267)
INT (268) 14
FLOAT (269)
BOOL (270)
STRING (271)
NE (272)
EQ (273)
LE (274)
GE (275)
UMINUS (276)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
init (34)
    on left: 2, on right: 1
function (35)
    on left: 3 4, on right: 1
scope (36)
    on left: 5, on right: 3 12
stmts (37)
    on left: 6 7, on right: 5 7
stmt (38)
    on left: 8 9 10 11 12, on right: 7
declaration (39)
    on left: 14, on right: 9
@1 (40)
    on left: 13, on right: 14
expr (41)
    on left: 15 16 17 18 19 20, on right: 10 11 14 17 18 19 20


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (init)

    program  go to state 1
    init     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: init . function

    MAIN  shift, and go to state 4

    $default  reduce using rule 4 (function)

    function  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 function: MAIN . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    1 program: init function .

    $default  reduce using rule 1 (program)


State 6

    5 scope: '{' . stmts '}'

    $default  reduce using rule 6 (stmts)

    stmts  go to state 8


State 7

    3 function: MAIN scope .

    $default  reduce using rule 3 (function)


State 8

    5 scope: '{' stmts . '}'
    7 stmts: stmts . stmt

    VARIABLE  shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 6
    '}'       shift, and go to state 12
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 15
    declaration  go to state 16


State 9

   11 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 17


State 10

   10 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 20


State 11

   14 declaration: INT . @1 expr ';'

    $default  reduce using rule 13 (@1)

    @1  go to state 21


State 12

    5 scope: '{' stmts '}' .

    $default  reduce using rule 5 (scope)


State 13

    8 stmt: ';' .

    $default  reduce using rule 8 (stmt)


State 14

   12 stmt: scope .

    $default  reduce using rule 12 (stmt)


State 15

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 16

    9 stmt: declaration . ';'

    ';'  shift, and go to state 22


State 17

   11 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 23


State 18

   15 expr: INTEGER .

    $default  reduce using rule 15 (expr)


State 19

   16 expr: VARIABLE .

    $default  reduce using rule 16 (expr)


State 20

   10 stmt: PRINT expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 28


State 21

   14 declaration: INT @1 . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 29


State 22

    9 stmt: declaration ';' .

    $default  reduce using rule 9 (stmt)


State 23

   11 stmt: VARIABLE '=' expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 30


State 24

   17 expr: expr '+' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 31


State 25

   18 expr: expr '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 32


State 26

   19 expr: expr '*' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 33


State 27

   20 expr: expr '/' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19

    expr  go to state 34


State 28

   10 stmt: PRINT expr ';' .

    $default  reduce using rule 10 (stmt)


State 29

   14 declaration: INT @1 expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ';'  shift, and go to state 35


State 30

   11 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 11 (stmt)


State 31

   17 expr: expr . '+' expr
   17     | expr '+' expr .
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 17 (expr)


State 32

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   18     | expr '-' expr .
   19     | expr . '*' expr
   20     | expr . '/' expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 18 (expr)


State 33

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   19     | expr '*' expr .
   20     | expr . '/' expr

    $default  reduce using rule 19 (expr)


State 34

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   20     | expr '/' expr .

    $default  reduce using rule 20 (expr)


State 35

   14 declaration: INT @1 expr ';' .

    $default  reduce using rule 14 (declaration)
