Terminals unused in grammar

   TRUE
   FALSE
   FLOAT
   BOOL
   STRING
   '>'
   '<'
   NE
   EQ
   LE
   GE
   UMINUS


Grammar

    0 $accept: function $end

    1 function: MAIN scope

    2 scope: '{' stmts '}'

    3 stmts: /* empty */
    4      | stmts stmt

    5 stmt: ';'
    6     | declaration ';'
    7     | PRINT expr ';'
    8     | VARIABLE '=' expr ';'
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | scope

   13 @1: /* empty */

   14 declaration: INT @1 expr ';'

   15 expr: INTEGER
   16     | VARIABLE
   17     | expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '/' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11
')' (41) 9 10 11
'*' (42) 19
'+' (43) 17
'-' (45) 18
'/' (47) 20
';' (59) 5 6 7 8 14
'<' (60)
'=' (61) 8
'>' (62)
'{' (123) 2
'}' (125) 2
error (256)
MAIN (258) 1
INTEGER (259) 15
VARIABLE (260) 8 16
WHILE (261) 9
IF (262) 10 11
PRINT (263) 7
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267) 11
INT (268) 14
FLOAT (269)
BOOL (270)
STRING (271)
NE (272)
EQ (273)
LE (274)
GE (275)
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
function (35)
    on left: 1, on right: 0
scope (36)
    on left: 2, on right: 1 12
stmts (37)
    on left: 3 4, on right: 2 4
stmt (38)
    on left: 5 6 7 8 9 10 11 12, on right: 4 9 10 11
declaration (39)
    on left: 14, on right: 6
@1 (40)
    on left: 13, on right: 14
expr (41)
    on left: 15 16 17 18 19 20, on right: 7 8 9 10 11 14 17 18 19 20


State 0

    0 $accept: . function $end

    MAIN  shift, and go to state 1

    function  go to state 2


State 1

    1 function: MAIN . scope

    '{'  shift, and go to state 3

    scope  go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    2 scope: '{' . stmts '}'

    $default  reduce using rule 3 (stmts)

    stmts  go to state 6


State 4

    1 function: MAIN scope .

    $default  reduce using rule 1 (function)


State 5

    0 $accept: function $end .

    $default  accept


State 6

    2 scope: '{' stmts . '}'
    4 stmts: stmts . stmt

    VARIABLE  shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 3
    '}'       shift, and go to state 12
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 15
    declaration  go to state 16


State 7

    8 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 17


State 8

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 18


State 9

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 19


State 10

    7 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 22


State 11

   14 declaration: INT . @1 expr ';'

    $default  reduce using rule 13 (@1)

    @1  go to state 23


State 12

    2 scope: '{' stmts '}' .

    $default  reduce using rule 2 (scope)


State 13

    5 stmt: ';' .

    $default  reduce using rule 5 (stmt)


State 14

   12 stmt: scope .

    $default  reduce using rule 12 (stmt)


State 15

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


State 16

    6 stmt: declaration . ';'

    ';'  shift, and go to state 24


State 17

    8 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 25


State 18

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 26


State 19

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 27


State 20

   15 expr: INTEGER .

    $default  reduce using rule 15 (expr)


State 21

   16 expr: VARIABLE .

    $default  reduce using rule 16 (expr)


State 22

    7 stmt: PRINT expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 32


State 23

   14 declaration: INT @1 . expr ';'

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 33


State 24

    6 stmt: declaration ';' .

    $default  reduce using rule 6 (stmt)


State 25

    8 stmt: VARIABLE '=' expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 34


State 26

    9 stmt: WHILE '(' expr . ')' stmt
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 35


State 27

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 36


State 28

   17 expr: expr '+' . expr

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 37


State 29

   18 expr: expr '-' . expr

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 38


State 30

   19 expr: expr '*' . expr

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 39


State 31

   20 expr: expr '/' . expr

    INTEGER   shift, and go to state 20
    VARIABLE  shift, and go to state 21

    expr  go to state 40


State 32

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


State 33

   14 declaration: INT @1 expr . ';'
   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 41


State 34

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


State 35

    9 stmt: WHILE '(' expr ')' . stmt

    VARIABLE  shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 42
    declaration  go to state 16


State 36

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    VARIABLE  shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 43
    declaration  go to state 16


State 37

   17 expr: expr . '+' expr
   17     | expr '+' expr .
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 17 (expr)


State 38

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   18     | expr '-' expr .
   19     | expr . '*' expr
   20     | expr . '/' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 18 (expr)


State 39

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   19     | expr '*' expr .
   20     | expr . '/' expr

    $default  reduce using rule 19 (expr)


State 40

   17 expr: expr . '+' expr
   18     | expr . '-' expr
   19     | expr . '*' expr
   20     | expr . '/' expr
   20     | expr '/' expr .

    $default  reduce using rule 20 (expr)


State 41

   14 declaration: INT @1 expr ';' .

    $default  reduce using rule 14 (declaration)


State 42

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


State 43

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 44

    $default  reduce using rule 10 (stmt)


State 44

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    VARIABLE  shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    INT       shift, and go to state 11
    '{'       shift, and go to state 3
    ';'       shift, and go to state 13

    scope        go to state 14
    stmt         go to state 45
    declaration  go to state 16


State 45

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
