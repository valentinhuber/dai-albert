Terminals unused in grammar

   TRUE
   FALSE
   INT
   FLOAT
   BOOL
   STRING
   UMINUS


Grammar

    0 $accept: program $end

    1 program: init function

    2 init: /* empty */

    3 function: MAIN scope

    4 scope: '{' stmts '}'

    5 stmts: stmt
    6      | stmts stmt

    7 stmt: PRINT expr ';'
    8     | VARIABLE '=' expr ';'
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | '{' stmts '}'

   13 expr: INTEGER
   14     | VARIABLE
   15     | expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | expr '<' expr
   20     | expr '>' expr
   21     | expr GE expr
   22     | expr LE expr
   23     | expr NE expr
   24     | expr EQ expr
   25     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 11 25
')' (41) 9 10 11 25
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
';' (59) 7 8
'<' (60) 19
'=' (61) 8
'>' (62) 20
'{' (123) 4 12
'}' (125) 4 12
error (256)
MAIN (258) 3
INTEGER (259) 13
VARIABLE (260) 8 14
WHILE (261) 9
IF (262) 10 11
PRINT (263) 7
TRUE (264)
FALSE (265)
IFX (266)
ELSE (267) 11
INT (268)
FLOAT (269)
BOOL (270)
STRING (271)
NE (272) 23
EQ (273) 24
LE (274) 22
GE (275) 21
UMINUS (276)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
init (36)
    on left: 2, on right: 1
function (37)
    on left: 3, on right: 1
scope (38)
    on left: 4, on right: 3
stmts (39)
    on left: 5 6, on right: 4 6 12
stmt (40)
    on left: 7 8 9 10 11 12, on right: 5 6 9 10 11
expr (41)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 7 8
    9 10 11 15 16 17 18 19 20 21 22 23 24 25


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (init)

    program  go to state 1
    init     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: init . function

    MAIN  shift, and go to state 4

    function  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 function: MAIN . scope

    '{'  shift, and go to state 6

    scope  go to state 7


State 5

    1 program: init function .

    $default  reduce using rule 1 (program)


State 6

    4 scope: '{' . stmts '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12

    stmts  go to state 13
    stmt   go to state 14


State 7

    3 function: MAIN scope .

    $default  reduce using rule 3 (function)


State 8

    8 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 15


State 9

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 16


State 10

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 17


State 11

    7 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 21


State 12

   12 stmt: '{' . stmts '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12

    stmts  go to state 22
    stmt   go to state 14


State 13

    4 scope: '{' stmts . '}'
    6 stmts: stmts . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12
    '}'       shift, and go to state 23

    stmt  go to state 24


State 14

    5 stmts: stmt .

    $default  reduce using rule 5 (stmts)


State 15

    8 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 25


State 16

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 26


State 17

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 27


State 18

   13 expr: INTEGER .

    $default  reduce using rule 13 (expr)


State 19

   14 expr: VARIABLE .

    $default  reduce using rule 14 (expr)


State 20

   25 expr: '(' . expr ')'

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 28


State 21

    7 stmt: PRINT expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '>'  shift, and go to state 29
    '<'  shift, and go to state 30
    NE   shift, and go to state 31
    EQ   shift, and go to state 32
    LE   shift, and go to state 33
    GE   shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ';'  shift, and go to state 39


State 22

    6 stmts: stmts . stmt
   12 stmt: '{' stmts . '}'

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12
    '}'       shift, and go to state 40

    stmt  go to state 24


State 23

    4 scope: '{' stmts '}' .

    $default  reduce using rule 4 (scope)


State 24

    6 stmts: stmts stmt .

    $default  reduce using rule 6 (stmts)


State 25

    8 stmt: VARIABLE '=' expr . ';'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '>'  shift, and go to state 29
    '<'  shift, and go to state 30
    NE   shift, and go to state 31
    EQ   shift, and go to state 32
    LE   shift, and go to state 33
    GE   shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ';'  shift, and go to state 41


State 26

    9 stmt: WHILE '(' expr . ')' stmt
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '>'  shift, and go to state 29
    '<'  shift, and go to state 30
    NE   shift, and go to state 31
    EQ   shift, and go to state 32
    LE   shift, and go to state 33
    GE   shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 42


State 27

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '>'  shift, and go to state 29
    '<'  shift, and go to state 30
    NE   shift, and go to state 31
    EQ   shift, and go to state 32
    LE   shift, and go to state 33
    GE   shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 43


State 28

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr
   25     | '(' expr . ')'

    '>'  shift, and go to state 29
    '<'  shift, and go to state 30
    NE   shift, and go to state 31
    EQ   shift, and go to state 32
    LE   shift, and go to state 33
    GE   shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 44


State 29

   20 expr: expr '>' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 45


State 30

   19 expr: expr '<' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 46


State 31

   23 expr: expr NE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 47


State 32

   24 expr: expr EQ . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 48


State 33

   22 expr: expr LE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 49


State 34

   21 expr: expr GE . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 50


State 35

   15 expr: expr '+' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 51


State 36

   16 expr: expr '-' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 52


State 37

   17 expr: expr '*' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 53


State 38

   18 expr: expr '/' . expr

    INTEGER   shift, and go to state 18
    VARIABLE  shift, and go to state 19
    '('       shift, and go to state 20

    expr  go to state 54


State 39

    7 stmt: PRINT expr ';' .

    $default  reduce using rule 7 (stmt)


State 40

   12 stmt: '{' stmts '}' .

    $default  reduce using rule 12 (stmt)


State 41

    8 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 8 (stmt)


State 42

    9 stmt: WHILE '(' expr ')' . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12

    stmt  go to state 55


State 43

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12

    stmt  go to state 56


State 44

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


State 45

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   20     | expr '>' expr .
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 20 (expr)


State 46

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   19     | expr '<' expr .
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 19 (expr)


State 47

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   23     | expr NE expr .
   24     | expr . EQ expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 23 (expr)


State 48

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr
   24     | expr EQ expr .

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 24 (expr)


State 49

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   22     | expr LE expr .
   23     | expr . NE expr
   24     | expr . EQ expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 22 (expr)


State 50

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   21     | expr GE expr .
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 21 (expr)


State 51

   15 expr: expr . '+' expr
   15     | expr '+' expr .
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 15 (expr)


State 52

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 16 (expr)


State 53

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    $default  reduce using rule 17 (expr)


State 54

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | expr . GE expr
   22     | expr . LE expr
   23     | expr . NE expr
   24     | expr . EQ expr

    $default  reduce using rule 18 (expr)


State 55

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


State 56

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 57

    $default  reduce using rule 10 (stmt)


State 57

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    VARIABLE  shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    PRINT     shift, and go to state 11
    '{'       shift, and go to state 12

    stmt  go to state 58


State 58

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
